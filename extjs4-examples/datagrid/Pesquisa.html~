<html>
    <head>
        <title></title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link rel="stylesheet" type="text/css" href="../extjs/resources/css/ext-all.css">
        <script type="text/javascript" src="../extjs/ext-all-dev.js"></script>
        <script type="text/javascript" src="../extjs/locale/ext-lang-pt_BR.js"></script>
        <script type="text/javascript">
            //Definindo Ext.data.Store inline dos Clientes
            Ext.define('MyApp.store.ClienteStore', {
                extend: 'Ext.data.Store',
                storeId: 'clienteStore',
                fields: ['nome', 'sexo', 'dataNascimento', 'rg', 'cpf'],
                data: {
                    'items': [
                        {'nome': 'Alexandre', 'sexo': 'M', 'dataNascimento': '12/16/1986', 'rg': '44.406.724-3', 'cpf': '351.914.858-74'},
                        {'nome': 'Gabriela', 'sexo': 'F', 'dataNascimento': '10/07/1989', 'rg': '45.525.858-8', 'cpf': '454.545.745-45'}
                    ]               
                },
                proxy: {
                    type: 'memory', // Necessario para inline
                    reader: {
                        type: 'json',
                        root: 'items'
                    }
                }
            });

            //Definindo Ext.data.Store inline do Sexo
            Ext.define('MyApp.store.SexoStore', {
                extend: 'Ext.data.Store',
                fields: ['sigla', 'descricao'],
                data: [
                    {"sigla": 'M', "descricao": 'Masculino'},
                    {"sigla": 'F', "descricao": 'Feminino'}
                ],
                proxy: {
                    type: 'memory', // Necessario para inline
                    reader: {
                        type: 'json',
                        root: 'items'
                    }
                }
            });

            // Definindo ClienteWindow
            Ext.define('MyApp.view.ClienteWindow', {
                extend: 'Ext.window.Window',
                title: 'Editar Cliente',
                autoShow: true,
                modal: true,

                bodyPadding: 5,

                width: 650,
                height: 250,
                layout: 'fit',

                initComponent: function() {
                    this.items = [
                        {
                            xtype: 'form', 
                            items: [
                                {
                                    xtype: 'textfield', 
                                    name: 'nome', 
                                    fieldLabel: 'Nome Completo',
                                    allowBlank: false,
                                    size: 70,
                                    maxLength: 100
                                },
                                {
                                    xtype: 'combobox',
                                    name: 'sexo',
                                    fieldLabel: 'Sexo',
                                    editable: false,
                                    autoSelect: true,
                                    allowBlank: false,
                                    store: Ext.create('MyApp.store.SexoStore'),
                                    queryMode: 'local',
                                    displayField: 'descricao',
                                    valueField: 'sigla'
                                },
                                {
                                    xtype: 'datefield',
                                    name: 'dataNascimento',
                                    fieldLabel: 'Data de Nascimento',
                                    allowBlank: false,
                                    submitFormat: 'm/d/y'
                                },
                                {
                                    xtype: 'textfield',
                                    name: 'rg',
                                    fieldLabel: 'RG',
                                    allowBlank: false,
                                    regex: /\d{2}[.]\d{3}[.]\d{3}[-](\d{1}|[xX])/,
                                    regexText: 'Digite um RG no formato 99.999.999-9',
                                    size: 12,
                                    maxLength: 12
                                 },
                                 {
                                    xtype: 'textfield',
                                    name: 'cpf',
                                    fieldLabel: 'CPF',
                                     allowBlank: false,
                                     regex: /\d{3}[.]\d{3}[.]\d{3}[-]\d{2}/,
                                     regexText: 'Digite um CPF no formato 99.999.999-99',
                                     size: 14,
                                     maxLength: 14
                                 }
                            ]
                        }
                    ];

                this.buttons = [
                        {
                            text: 'Salvar',
                            handler: function(button) {
                                console.log('Salvando Registro');
                                var win = button.up('window');
                                var form = win.down('form');

                                var record = form.getRecord();
                                var values = form.getValues();

                                record.set(values);

                                win.close();

                                var ds = Ext.storeManager.lookup('clienteStore');
                                ds.sync();
                            }
                        },
                        {
                            text: 'Cancelar',
                            scope: this,
                            handler: function(button) {
                                console.log('Fechando Janela de Edicao');
                                var win = button.up('window');
                                win.close();
                            }
                        }
                    ];

                    this.callParent(arguments);
                }

            });

            // Definindo ClienteGrid
            Ext.define('MyApp.view.ClienteGrid', {
                extend: 'Ext.grid.Panel',

                title: 'Clientes',
                store: Ext.create('MyApp.store.ClienteStore'),
                columns: [
                    { text: 'Nome Completo', dataIndex: 'nome' },
                    { text: 'Sexo', dataIndex: 'sexo' },
                    { text: 'Data de Nascimento', dataIndex: 'dataNascimento' },
                    { text: 'RG', dataIndex: 'rg' },
                    { text: 'CPF', dataIndex: 'cpf' }
                ],
                height: 200,
                width: 600,
                viewConfig: {
                    listeners: {
                         itemdblclick: function(view, record, node, index, e, options) {
                             console.log('Iniciando edicao de registro do cliente ' + record.get('nome'));
                             var edicao = Ext.create('MyApp.view.ClienteWindow');
                             edicao.down('form').loadRecord(record);
                         }
                    }
                }
            });

            Ext.onReady(function() {
                var clienteGrid = Ext.create('MyApp.view.ClienteGrid', {
                    renderTo: 'dataGrid'
                });
            });

        </script>
        <style type="text/css">
            body {
                margin-left: 5px;
                margin-right: 5px;
                margin-top: 5px;
                margin-bottom: 5px;
            }
        </style>
    </head>
    <body>
        <div id="dataGrid"></div>
    </body>
</html
